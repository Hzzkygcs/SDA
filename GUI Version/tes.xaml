<Window x:Class="HzzGrader.tes"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:HzzGrader"
        mc:Ignorable="d"
        Title="tes" Height="450" Width="800">
    <Window.Resources>


        <ControlTemplate x:Key="combobox_style" TargetType="ComboBox">
            <Grid>
                <ToggleButton Name="ToggleButton" Foreground="DimGray" Template="{StaticResource ComboBoxToggleButton}"
                              Focusable="false"
                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                              ClickMode="Press" />
                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3"
                                  VerticalAlignment="Center" HorizontalAlignment="Left" />
                <TextBox OverridesDefaultStyle="True" Margin="0,0,30,0" TextWrapping="NoWrap"
                         x:Name="PART_EditableTextBox" FontFamily="Segoe UI Dark" Foreground="Red" Style="{x:Null}"
                         Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" Focusable="True"
                         VerticalAlignment="Center" FontSize="20"
                         Visibility="Visible" IsReadOnly="{TemplateBinding IsReadOnly}" />
                <Popup Name="Popup" Grid.ColumnSpan="2" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                       AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                    <Grid Name="DropDown" SnapsToDevicePixels="True" MaxWidth="{TemplateBinding ActualWidth}"
                          MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border Grid.ColumnSpan="2" Grid.RowSpan="2" x:Name="DropDownBorder" SnapsToDevicePixels="True"
                                Background="#FF200000" MaxWidth="{TemplateBinding ActualWidth}" BorderThickness="2"
                                BorderBrush="{StaticResource SolidRedBrush}" CornerRadius="2,2,2,2" />
                        <ScrollViewer Grid.ColumnSpan="2" ScrollViewer.CanContentScroll="False" Grid.Row="1"
                                      SnapsToDevicePixels="True" Cursor="Hand" Foreground="Red" Background="#AA200000">
                            <StackPanel IsItemsHost="True" Background="Transparent" Margin="2,5,2,5" />
                        </ScrollViewer>
                    </Grid>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <!-- here u can change the settings for the combo box-->
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter TargetName="PART_EditableTextBox" Property="Background" Value="White" />
                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                    <Setter TargetName="PART_EditableTextBox" Property="FontSize" Value="15" />
                    <Setter TargetName="PART_EditableTextBox" Property="Foreground"
                            Value="{StaticResource SolidRedBrush}" />
                    <Setter TargetName="ContentSite" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
                    <Setter TargetName="PART_EditableTextBox" Property="Foreground"
                            Value="{StaticResource SolidRedBrush}" />
                    <Setter TargetName="PART_EditableTextBox" Property="IsEnabled" Value="False" />
                    <Setter TargetName="PART_EditableTextBox" Property="Background" Value="White" />
                    <Setter TargetName="ContentSite" Property="Visibility" Value="Visible" />
                </Trigger>
                <Trigger Property="IsGrouping" Value="true">
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </Trigger>
                <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                    <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxItemStyle1" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Padding" Value="4,1" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True"
                                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                               StrokeThickness="1" StrokeDashArray="1 2" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#1F26A0DA" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#A826A0DA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3D26A0DA" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#2E0080FF" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#99006CD9" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#3DDADADA" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FFDADADA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="False" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="False" />
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsKeyboardFocused" Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#5426A0DA" />
                                <Setter Property="BorderBrush" TargetName="Bd" Value="#FF26A0DA" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Window.Resources>

    <WrapPanel Background="Gray">
        <ComboBox Template="{StaticResource combobox_style}"
                  ItemContainerStyle="{DynamicResource ComboBoxItemStyle1}">
            <ComboBoxItem Content="item 1" />
            <ComboBoxItem Content="item 2" />
            <ComboBoxItem Content="item 3" />
        </ComboBox>

    </WrapPanel>
</Window>